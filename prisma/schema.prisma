generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Member {
  id           Int       @id @default(autoincrement())
  name         String
  gender       Gender
  phone        String    @unique
  age          Int
  height       Float
  weight       Float
  joiningDate  DateTime  @default(now())
  planId       Int?
  activePlan   String?
  paymentStart DateTime?
  dueDate      DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  status       Boolean   @default(true)
  plan         Plan?     @relation(fields: [planId], references: [id])
  payments     Payment[]
}

model Plan {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  duration  Int
  amount    Float
  type      PlanType   @default(membership_plan)
  status    PlanStatus @default(active)
  isDeleted Boolean    @default(false)
  deletedAt DateTime?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  members   Member[]
}

model Payment {
  id       Int      @id @default(autoincrement())
  memberId Int
  amount   Float
  date     DateTime @default(now())
  member   Member   @relation(fields: [memberId], references: [id])
}

model Task {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now())
}

enum Gender {
  male
  female
  other
}

enum PlanStatus {
  active
  inactive
}

enum PlanType {
  membership_plan
  personal_training
}
